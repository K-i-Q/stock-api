services:
  rabbitmq:
      image: rabbitmq:3-management
      container_name: stockapi-rabbit
      ports:
        - "5672:5672"
        - "15672:15672"
      environment:
        RABBITMQ_DEFAULT_USER: stock
        RABBITMQ_DEFAULT_PASS: stock
      healthcheck:
        test: ["CMD-SHELL", "rabbitmq-diagnostics -q check_running"]
        interval: 10s
        timeout: 5s
        retries: 10
  db:
    image: postgres:16-alpine
    container_name: stockapi-db
    environment:
      POSTGRES_USER: stock
      POSTGRES_PASSWORD: stock
      POSTGRES_DB: stockdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stock -d stockdb"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - dataprotection:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stockapi
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__Default: Host=db;Port=5432;Database=stockdb;Username=stock;Password=stock
      Jwt__Key: ${JWT_KEY:-super-secret-key-change-me-please-32chars}
      Jwt__Issuer: stockapi
      Jwt__Audience: stockapi-clients
      Jwt__TokenExpirationMinutes: "60"
      RabbitMq__Host: rabbitmq
      RabbitMq__User: stock
      RabbitMq__Pass: stock
    ports:
      - "8080:8080"

volumes:
  pgdata:
  dataprotection:
