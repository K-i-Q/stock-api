name: .NET CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore StockSolution.sln

      - name: Install dotnet-format (latest available)
        run: dotnet tool install -g dotnet-format || dotnet tool update -g dotnet-format

      - name: Lint
        run: dotnet format --verify-no-changes

      - name: Build (Release)
        run: dotnet build StockSolution.sln --no-restore -c Release

      - name: Test with coverage
        run: |
          dotnet test StockSolution.sln \
            --no-build -c Release \
            --collect:"XPlat Code Coverage" \
            --logger "trx;LogFileName=test_results.trx" \
            --results-directory ${{ github.workspace }}/TestResults

      - name: Debug coverage files
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          find "$GITHUB_WORKSPACE" -type f -name "coverage.cobertura.xml" -print || true

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            ${{ github.workspace }}/TestResults/**/coverage.cobertura.xml
            **/TestResults/**/coverage.cobertura.xml

      - name: Upload test results (trx)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/TestResults/*.trx

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: |
            ${{ github.workspace }}/TestResults/**/coverage.cobertura.xml
            **/TestResults/**/coverage.cobertura.xml
          fail_ci_if_error: false
          verbose: true
