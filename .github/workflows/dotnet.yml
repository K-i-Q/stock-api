name: .NET CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore StockSolution.sln

      - name: Install dotnet-format (latest available)
        run: dotnet tool install -g dotnet-format || dotnet tool update -g dotnet-format
      - name: Lint (auto-detect flag)
        shell: bash
        run: |
          set -e
          dotnet-format --version
          if dotnet-format --help | grep -q -- "--check"; then
            echo "Using --check"
            dotnet-format StockSolution.sln --check --verbosity minimal
          else
            echo "Using --verify-no-changes"
            dotnet-format StockSolution.sln --verify-no-changes --verbosity minimal
          fi

      - name: Build (Release)
        run: dotnet build StockSolution.sln --no-restore -c Release

      - name: Test with coverage
        run: |
          dotnet test StockSolution.sln \
            --no-build -c Release \
            /p:CollectCoverage=true \
            /p:CoverletOutput=./TestResults/coverage/ \
            /p:CoverletOutputFormat='cobertura'

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-cobertura
          path: "**/TestResults/coverage/coverage.cobertura.xml"

      - name: Upload test results (trx)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: "**/TestResults/*.trx"
